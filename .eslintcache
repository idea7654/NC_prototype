[{"/Users/oh/Desktop/Study/NC_proto_1/src/index.js":"1","/Users/oh/Desktop/Study/NC_proto_1/src/App.js":"2","/Users/oh/Desktop/Study/NC_proto_1/src/reportWebVitals.js":"3","/Users/oh/Desktop/Study/NC_proto_1/src/context/RoomContext.js":"4","/Users/oh/Desktop/Study/NC_proto_1/src/components/Main.js":"5","/Users/oh/Desktop/Study/NC_proto_1/src/components/Menu.js":"6","/Users/oh/Desktop/Study/NC_proto_1/src/reducer/RoomReducer.js":"7","/Users/oh/Desktop/Study/NC_proto_1/src/components/Work_search.js":"8","/Users/oh/Desktop/Study/NC_proto_1/src/components/NewWork.js":"9","/Users/oh/Desktop/Study/NC_proto_1/src/components/DailyList.js":"10","/Users/oh/Desktop/Study/NC_proto_1/src/components/FinishWorkList.js":"11","/Users/oh/Desktop/Study/NC_proto_1/src/components/WorkList.js":"12","/Users/oh/Desktop/Study/NC_proto_1/src/components/WorkProcess.js":"13","/Users/oh/Desktop/Study/NC_proto_1/src/components/DailyDetail.js":"14"},{"size":638,"mtime":1637385213314,"results":"15","hashOfConfig":"16"},{"size":429,"mtime":1637386444904,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610973207128,"results":"18","hashOfConfig":"16"},{"size":517,"mtime":1637653428033,"results":"19","hashOfConfig":"16"},{"size":1829,"mtime":1637388014398,"results":"20","hashOfConfig":"16"},{"size":9750,"mtime":1637475646434,"results":"21","hashOfConfig":"16"},{"size":215,"mtime":1637386218925,"results":"22","hashOfConfig":"16"},{"size":10167,"mtime":1637656809383,"results":"23","hashOfConfig":"16"},{"size":6147,"mtime":1637653023274,"results":"24","hashOfConfig":"16"},{"size":2593,"mtime":1637653551467,"results":"25","hashOfConfig":"16"},{"size":6102,"mtime":1637653499201,"results":"26","hashOfConfig":"16"},{"size":2943,"mtime":1637653389016,"results":"27","hashOfConfig":"16"},{"size":5231,"mtime":1637653171900,"results":"28","hashOfConfig":"16"},{"size":1608,"mtime":1637386203210,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"o6bfae",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"/Users/oh/Desktop/Study/NC_proto_1/src/index.js",[],["67","68"],"/Users/oh/Desktop/Study/NC_proto_1/src/App.js",["69","70"],"import React, { useState } from \"react\";\nimport { withRouter, Route } from \"react-router-dom\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport Main from \"./components/Main\";\nimport Menu from \"./components/Menu\";\nconst App = () => {\n  return (\n    <div>\n      <Route path=\"/\" render={() => <Main />} exact />\n      <Route path=\"/menu\" render={() => <Menu />} />\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","/Users/oh/Desktop/Study/NC_proto_1/src/reportWebVitals.js",[],"/Users/oh/Desktop/Study/NC_proto_1/src/context/RoomContext.js",[],"/Users/oh/Desktop/Study/NC_proto_1/src/components/Main.js",[],"/Users/oh/Desktop/Study/NC_proto_1/src/components/Menu.js",["71","72","73","74","75","76","77","78","79"],"import React, { useEffect, useContext } from \"react\";\nimport \"./Menu.css\";\nimport { withRouter, Route } from \"react-router-dom\";\nimport Work_search from \"./Work_search\";\nimport NewWork from \"./NewWork\";\nimport WorkList from \"./WorkList\";\nimport WorkProcess from \"./WorkProcess\";\nimport FinishWorkList from \"./FinishWorkList\";\nimport DailyList from \"./DailyList\";\nimport DailyDetail from \"./DailyDetail\";\nimport RoomContext from \"../context/RoomContext\";\n\nconst Menu = ({ history }) => {\n  // const [title, setTitle] = React.useState(\"작업 절차서 다운\");\n  const [Infos] = useContext(RoomContext);\n\n  useEffect(() => {\n    console.log(Infos);\n  }, []);\n  return (\n    <div>\n      <div className=\"flex flex-row min-h-screen bg-gray-100 text-gray-800\">\n        {/* <aside className=\"sidebar w-64 md:shadow transform -translate-x-full md:translate-x-0 transition-transform duration-150 ease-in bg-indigo-500\"> */}\n        <aside\n          style={\n            Infos.title == \"작업 일지 목록\"\n              ? { width: \"42%\" }\n              : { width: \"16rem\" }\n          }\n          className=\"sidebar md:shadow transform -translate-x-full md:translate-x-0 transition-transform duration-150 ease-in bg-indigo-500\"\n        >\n          <div className=\"sidebar-header flex items-center justify-center py-4\">\n            <div className=\"inline-flex\">\n              <a href=\"#\" className=\"inline-flex flex-row items-center\">\n                <svg\n                  className=\"w-10 h-10 text-red-400\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M11.757 2.034a1 1 0 01.638.519c.483.967.844 1.554 1.207 2.03.368.482.756.876 1.348 1.467A6.985 6.985 0 0117 11a7.002 7.002 0 01-14 0c0-1.79.684-3.583 2.05-4.95a1 1 0 011.707.707c0 1.12.07 1.973.398 2.654.18.374.461.74.945 1.067.116-1.061.328-2.354.614-3.58.225-.966.505-1.93.839-2.734.167-.403.356-.785.57-1.116.208-.322.476-.649.822-.88a1 1 0 01.812-.134zm.364 13.087A2.998 2.998 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879.586.585.879 1.353.879 2.121s-.293 1.536-.879 2.121z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n                <span className=\"leading-10 text-gray-100 text-2xl font-bold ml-1 uppercase pr-8\">\n                  작업관리\n                </span>\n              </a>\n            </div>\n          </div>\n          <div className=\"sidebar-content px-4 py-6\">\n            <ul className=\"flex flex-col w-full\">\n              <li className=\"my-px\">\n                <span className=\"flex font-medium text-sm text-gray-300 px-4 my-4 uppercase\">\n                  Menu\n                </span>\n              </li>\n              <li className=\"my-px\">\n                <a\n                  className=\"flex flex-row items-center h-10 px-3 rounded-lg text-gray-300 hover:bg-gray-100 hover:text-gray-700\"\n                  onClick={() => {\n                    history.push(\"/menu/normal\");\n                  }}\n                >\n                  <span className=\"flex items-center justify-center text-lg text-gray-400\">\n                    <svg\n                      fill=\"none\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      className=\"h-6 w-6\"\n                    >\n                      <path d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\n                    </svg>\n                  </span>\n                  <span className=\"ml-3\">작업 절차서 검색</span>\n                </a>\n              </li>\n              <li className=\"my-px\">\n                <a\n                  className=\"flex flex-row items-center h-10 px-3 rounded-lg text-gray-300 hover:bg-gray-100 hover:text-gray-700\"\n                  onClick={() => {\n                    history.push(\"/menu/new\");\n                  }}\n                >\n                  <span className=\"flex items-center justify-center text-lg text-gray-400\">\n                    <svg\n                      fill=\"none\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      className=\"h-6 w-6\"\n                    >\n                      <path d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n                    </svg>\n                  </span>\n                  <span className=\"ml-3\">작업 신청</span>\n                </a>\n              </li>\n              <li className=\"my-px\">\n                <a\n                  className=\"flex flex-row items-center h-10 px-3 rounded-lg text-gray-300 hover:bg-gray-100 hover:text-gray-700\"\n                  onClick={() => {\n                    history.push(\"/menu/list\");\n                  }}\n                >\n                  <span className=\"flex items-center justify-center text-lg text-gray-400\">\n                    <svg\n                      fill=\"none\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      className=\"h-6 w-6\"\n                    >\n                      <path d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n                    </svg>\n                  </span>\n                  <span className=\"ml-3\">작업 수행</span>\n                </a>\n              </li>\n              <li className=\"my-px\">\n                <a\n                  className=\"flex flex-row items-center h-10 px-3 rounded-lg text-gray-300 hover:bg-gray-100 hover:text-gray-700\"\n                  onClick={() => {\n                    history.push(\"/menu/finish\");\n                  }}\n                >\n                  <span className=\"flex items-center justify-center text-lg text-gray-400\">\n                    <svg\n                      fill=\"none\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      className=\"h-6 w-6\"\n                    >\n                      <path d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\" />\n                    </svg>\n                  </span>\n                  <span className=\"ml-3\">작업 완료 목록</span>\n                </a>\n              </li>\n              <li className=\"my-px\">\n                <a\n                  className=\"flex flex-row items-center h-10 px-3 rounded-lg text-gray-300 hover:bg-gray-100 hover:text-gray-700\"\n                  onClick={() => {\n                    history.push(\"/menu/daily\");\n                  }}\n                >\n                  <span className=\"flex items-center justify-center text-lg text-gray-400\">\n                    <svg\n                      fill=\"none\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      className=\"h-6 w-6\"\n                    >\n                      <path d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n                    </svg>\n                  </span>\n                  <span className=\"ml-3\">작업 일지 확인</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </aside>\n        <main className=\"main flex flex-col flex-grow -ml-64 md:ml-0 transition-all duration-150 ease-in\">\n          <div className=\"main-content flex flex-col flex-grow p-4\">\n            <h1 className=\"font-bold text-2xl text-gray-700\">{Infos.title}</h1>\n            <div className=\"flex flex-col flex-grow border-4 border-gray-400 border-dashed bg-white rounded mt-4\">\n              <Route path=\"/menu/normal\" render={() => <Work_search />} exact />\n              <Route\n                path=\"/menu/new\"\n                render={(setTitle) => <NewWork setTitle={setTitle} />}\n              />\n              <Route path=\"/menu/list\" render={() => <WorkList />} />\n              <Route path=\"/menu/process\" render={() => <WorkProcess />} />\n              <Route path=\"/menu/finish\" render={() => <FinishWorkList />} />\n              <Route path=\"/menu/daily\" render={() => <DailyList />} />\n              <Route path=\"/menu/detail\" render={() => <DailyDetail />} />\n            </div>\n          </div>\n          <footer className=\"footer px-4 py-6\">\n            <div className=\"footer-content\">\n              <p className=\"text-sm text-gray-600 text-center\">\n                © Paichai Univ. 2021. All rights reserved.{\" \"}\n                <a href=\"https://twitter.com/iaminos\">by 오승묵</a>\n              </p>\n            </div>\n          </footer>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Menu);\n","/Users/oh/Desktop/Study/NC_proto_1/src/reducer/RoomReducer.js",[],"/Users/oh/Desktop/Study/NC_proto_1/src/components/Work_search.js",["80","81","82","83","84"],"/Users/oh/Desktop/Study/NC_proto_1/src/components/NewWork.js",["85","86"],"import React, { useContext } from \"react\";\nimport \"./NewWork.css\";\nimport { withRouter } from \"react-router-dom\";\nimport RoomContext from \"../context/RoomContext\";\n\nconst NewWork = ({ history }) => {\n  const [showModal, setShowModal] = React.useState(false);\n  const [completeText, setCompleteText] = React.useState(false);\n  const [Infos, dispatch] = useContext(RoomContext);\n  const [complete, setComplete] = React.useState(false);\n  const [text, setText] = React.useState(\"2\");\n\n  React.useEffect(() => {\n    dispatch({\n      type: \"SET_INFO\",\n      value: \"신규 작업 신청\",\n      name: \"title\",\n    });\n  }, []);\n  return (\n    <div>\n      <table style={{ margin: \"auto\", width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>No</th>\n            <th>Document No.</th>\n            <th>Title</th>\n            <th>Rev.No</th>\n            <th>선택</th>\n          </tr>\n          <tr\n            style={\n              complete\n                ? { backgroundColor: \"lightgray\" }\n                : { backgroundColor: \"white\" }\n            }\n          >\n            <td>1</td>\n            <td>JR-ROP_SI_014</td>\n            <td>Channel test for Protection System</td>\n            <td>{text}</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr>\n            <td>2</td>\n            <td>JR-ROP_SI_015</td>\n            <td>Channel Check for Post-Accident Monitoring System</td>\n            <td>1</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr>\n            <td>3</td>\n            <td>JR-ROP_SI_016</td>\n            <td>Channel Test for Post-Accident Monitoring System</td>\n            <td>0</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr>\n            <td>4</td>\n            <td>JR-ROP_SI_017</td>\n            <td>Function Test for Radiation Monitoring System</td>\n            <td>1</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr>\n            <td>5</td>\n            <td>JR-ROP_SI_018</td>\n            <td>Inspection for Fire Protection System</td>\n            <td>1</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr>\n            <td>6</td>\n            <td>JR-ROP_SI_019</td>\n            <td>function test for Automatic Seismic Trip System</td>\n            <td>0</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n        </thead>\n      </table>\n      <div style={{ paddingTop: \"5em\" }}>\n        <button\n          style={{\n            backgroundColor: \"rgb(13, 132, 212)\",\n            color: \"white\",\n            border: \"none\",\n            padding: \"10px 100px\",\n            fontSize: \"15px\",\n            borderRadius: \"5px\",\n          }}\n          onClick={() => setShowModal(true)}\n        >\n          작업 신청\n        </button>\n        {showModal ? (\n          <>\n            <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\n              <div className=\"relative w-full my-6 mx-auto max-w-sm\">\n                {/*content*/}\n                <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                  {/*header*/}\n                  <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\n                    <h3 className=\"text-3xl font-semibold\">알림</h3>\n                    <button\n                      className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                      onClick={() => setShowModal(false)}\n                    >\n                      <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                        ×\n                      </span>\n                    </button>\n                  </div>\n                  {/*body*/}\n                  <div className=\"relative p-6 flex-auto\">\n                    <p className=\"my-4 text-blueGray-500 text-lg leading-relaxed\">\n                      {completeText\n                        ? \"작업 신청을 완료하였습니다.\"\n                        : \"작업을 신청하시겠습니까?\"}\n                    </p>\n                  </div>\n                  {/*footer*/}\n                  <div className=\"flex items-center justify-between p-6 border-t border-solid border-blueGray-200 rounded-b\">\n                    <button\n                      className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                      type=\"button\"\n                      onClick={() => setShowModal(false)}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className=\"bg-green-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                      type=\"button\"\n                      onClick={() => {\n                        if (completeText) {\n                          setShowModal(false);\n                          setCompleteText(false);\n                          setComplete(true);\n                          setText(\"신청중\");\n                        } else {\n                          setCompleteText(true);\n                        }\n                      }}\n                    >\n                      OK\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n          </>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(NewWork);\n","/Users/oh/Desktop/Study/NC_proto_1/src/components/DailyList.js",["87","88"],"import React, { useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport RoomContext from \"../context/RoomContext\";\n\nconst DailyList = ({ history }) => {\n  const [Infos, dispatch] = useContext(RoomContext);\n\n  React.useEffect(() => {\n    dispatch({\n      type: \"SET_INFO\",\n      value: \"작업 일지 목록\",\n      name: \"title\",\n    });\n  }, []);\n  return (\n    <div>\n      <div>\n        <table style={{ margin: \"auto\", width: \"100%\" }}>\n          <thead>\n            <tr>\n              <th>Document No.</th>\n              <th>Title</th>\n              <th>작업신청</th>\n              <th>신청작업 승인</th>\n              <th>작업완료</th>\n              <th>완료작업승인</th>\n              <th></th>\n            </tr>\n            <tr>\n              <td rowSpan=\"2\">JR-ROP_SI_014</td>\n              <td rowSpan=\"2\">Channel test for Protection System</td>\n              <td>홍길동</td>\n              <td>왕건</td>\n              <td>홍길동</td>\n              <td>왕건</td>\n              <td rowSpan=\"2\">\n                <input type=\"checkbox\" />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"date\">2021-01-01</td>\n              <td className=\"date\">2021-01-02</td>\n              <td className=\"date\">2021-01-15</td>\n              <td className=\"date\">2021-01-16</td>\n            </tr>\n            <tr>\n              <td rowSpan=\"2\">JR-ROP_SI_015</td>\n              <td rowSpan=\"2\">\n                Channel Check for Post-Accident Monitoring System\n              </td>\n              <td>이몽룡</td>\n              <td>왕건</td>\n              <td>이몽룡</td>\n              <td>왕건</td>\n              <td rowSpan=\"2\">\n                <input type=\"checkbox\" />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"date\">2021-01-01</td>\n              <td className=\"date\">2021-01-12</td>\n              <td className=\"date\">2021-01-30</td>\n              <td className=\"date\">2021-02-01</td>\n            </tr>\n          </thead>\n        </table>\n        <div style={{ paddingTop: \"100px\" }}>\n          <button\n            style={{\n              backgroundColor: \"rgb(13, 132, 212)\",\n              color: \"white\",\n              border: \"none\",\n              padding: \"10px 100px\",\n              fontSize: \"15px\",\n              borderRadius: \"5px\",\n            }}\n            onClick={() => history.push(\"/menu/detail\")}\n          >\n            작업일지 확인\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(DailyList);\n","/Users/oh/Desktop/Study/NC_proto_1/src/components/FinishWorkList.js",["89"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport RoomContext from \"../context/RoomContext\";\n\nconst FinishWorkList = ({ history }) => {\n  const [showModal, setShowModal] = React.useState(false);\n  const [Infos, dispatch] = React.useContext(RoomContext);\n\n  React.useEffect(() => {\n    dispatch({\n      type: \"SET_INFO\",\n      value: \"작업중인 절차서 목록\",\n      name: \"title\",\n    });\n  }, []);\n  return (\n    <div>\n      <div>\n        <table\n          style={{\n            margin: \"auto\",\n            width: \"100%\",\n          }}\n        >\n          <thead>\n            <tr>\n              <th>No</th>\n              <th>Document No.</th>\n              <th>Title</th>\n              <th>Rev.No</th>\n              <th>선택</th>\n            </tr>\n            <tr\n              style={\n                Infos.isFinish\n                  ? { backgroundColor: \"lightblue\" }\n                  : { backgroundColor: \"white\" }\n              }\n            >\n              <td>1</td>\n              <td>JR-ROP_SI_014</td>\n              <td>Channel test for Protection System</td>\n              <td>{Infos.isFinish ? \"작업완료\" : \"2\"}</td>\n              <td>\n                <input type=\"checkbox\" />\n              </td>\n            </tr>\n            <tr>\n              <td>2</td>\n              <td>JR-ROP_SI_015</td>\n              <td>Channel Check for Post-Accident Monitoring System</td>\n              <td>1</td>\n              <td>\n                <input type=\"checkbox\" />\n              </td>\n            </tr>\n            <tr>\n              <td>3</td>\n              <td>JR-ROP_SI_016</td>\n              <td>Channel Test for Post-Accident Monitoring System</td>\n              <td>0</td>\n              <td>\n                <input type=\"checkbox\" />\n              </td>\n            </tr>\n            <tr>\n              <td>4</td>\n              <td>JR-ROP_SI_017</td>\n              <td>Function Test for Radiation Monitoring System</td>\n              <td>1</td>\n              <td>\n                <input type=\"checkbox\" />\n              </td>\n            </tr>\n            <tr>\n              <td>5</td>\n              <td>JR-ROP_SI_018</td>\n              <td>Inspection for Fire Protection System</td>\n              <td>1</td>\n              <td>\n                <input type=\"checkbox\" />\n              </td>\n            </tr>\n            <tr>\n              <td>6</td>\n              <td>JR-ROP_SI_019</td>\n              <td>function test for Automatic Seismic Trip System</td>\n              <td>0</td>\n              <td>\n                <input type=\"checkbox\" />\n              </td>\n            </tr>\n          </thead>\n        </table>\n        <div style={{ paddingTop: \"6em\" }}>\n          <button\n            style={{\n              backgroundColor: \"rgb(13, 132, 212)\",\n              color: \"white\",\n              border: \"none\",\n              padding: \"10px 100px\",\n              fontSize: \"15px\",\n              borderRadius: \"5px\",\n            }}\n            onClick={() => setShowModal(true)}\n          >\n            작업 등록\n          </button>\n        </div>\n        {showModal ? (\n          <>\n            <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\n              <div className=\"relative w-full my-6 mx-auto max-w-sm\">\n                {/*content*/}\n                <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                  {/*header*/}\n                  <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\n                    <h3 className=\"text-3xl font-semibold\">알림</h3>\n                    <button\n                      className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                      onClick={() => setShowModal(false)}\n                    >\n                      <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                        ×\n                      </span>\n                    </button>\n                  </div>\n                  {/*body*/}\n                  <div className=\"relative p-6 flex-auto\">\n                    <p className=\"my-4 text-blueGray-500 text-lg leading-relaxed\">\n                      작업절차서를 등록하시겠습니까?\n                    </p>\n                  </div>\n                  {/*footer*/}\n                  <div className=\"flex items-center justify-between p-6 border-t border-solid border-blueGray-200 rounded-b\">\n                    <button\n                      className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                      type=\"button\"\n                      onClick={() => setShowModal(false)}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className=\"bg-green-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                      type=\"button\"\n                      onClick={() => {\n                        setShowModal(false);\n                        history.push(\"/menu/finish\");\n                        dispatch({\n                          type: \"SET_INFO\",\n                          value: true,\n                          name: \"isFinish\",\n                        });\n                      }}\n                    >\n                      OK\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n          </>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(FinishWorkList);\n","/Users/oh/Desktop/Study/NC_proto_1/src/components/WorkList.js",["90"],"import React, { useContext } from \"react\";\nimport \"./NewWork.css\";\nimport { withRouter } from \"react-router-dom\";\nimport RoomContext from \"../context/RoomContext\";\n\nconst WorkList = ({ history }) => {\n  const [Infos, dispatch] = useContext(RoomContext);\n\n  React.useEffect(() => {\n    dispatch({\n      type: \"SET_INFO\",\n      value: \"신청된 작업 목록\",\n      name: \"title\",\n    });\n  }, []);\n  return (\n    <div>\n      <table style={{ margin: \"auto\", width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>No</th>\n            <th>Document No.</th>\n            <th>Title</th>\n            <th>Rev.No</th>\n            <th>선택</th>\n          </tr>\n          <tr\n            style={\n              Infos.isProcess\n                ? { backgroundColor: \"lightgray\" }\n                : { backgroundColor: \"white\" }\n            }\n          >\n            <td>1</td>\n            <td>JR-ROP_SI_014</td>\n            <td>Channel test for Protection System</td>\n            <td>{Infos.isProcess ? \"작업중\" : \"2\"}</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr>\n            <td>2</td>\n            <td>JR-ROP_SI_015</td>\n            <td>Channel Check for Post-Accident Monitoring System</td>\n            <td>1</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr>\n            <td>3</td>\n            <td>JR-ROP_SI_016</td>\n            <td>Channel Test for Post-Accident Monitoring System</td>\n            <td>0</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr>\n            <td>4</td>\n            <td>JR-ROP_SI_017</td>\n            <td>Function Test for Radiation Monitoring System</td>\n            <td>1</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr>\n            <td>5</td>\n            <td>JR-ROP_SI_018</td>\n            <td>Inspection for Fire Protection System</td>\n            <td>1</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n          <tr style={{ color: \"red\" }}>\n            <td>6</td>\n            <td>JR-ROP_SI_019</td>\n            <td>function test for Automatic Seismic Trip System</td>\n            <td>0</td>\n            <td>\n              <input type=\"checkbox\" />\n            </td>\n          </tr>\n        </thead>\n      </table>\n      <div style={{ paddingTop: \"5em\" }}>\n        <button\n          style={{\n            backgroundColor: \"rgb(13, 132, 212)\",\n            color: \"white\",\n            border: \"none\",\n            padding: \"10px 100px\",\n            fontSize: \"15px\",\n            borderRadius: \"5px\",\n          }}\n          onClick={() => {\n            history.push(\"/menu/process\");\n          }}\n        >\n          작업 선택\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(WorkList);\n","/Users/oh/Desktop/Study/NC_proto_1/src/components/WorkProcess.js",["91","92"],"import React, { useContext } from \"react\";\n// import \"./WorkProcess.css\";\nimport { withRouter } from \"react-router-dom\";\nimport RoomContext from \"../context/RoomContext\";\n\nconst WorkProcess = ({ history }) => {\n  const [Infos, dispatch] = useContext(RoomContext);\n\n  React.useEffect(() => {\n    dispatch({\n      type: \"SET_INFO\",\n      value: \"Channel test for Protection System\",\n      name: \"title\",\n    });\n  }, []);\n  const [showModal, setShowModal] = React.useState(false);\n  return (\n    <div>\n      <div>\n        <div>\n          <table\n            style={{\n              margin: \"auto\",\n              width: \"100%\",\n              height: \"23rem\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>No</th>\n                <th>작업 종류</th>\n                <th>작업 내용</th>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>A</td>\n                <td>\n                  <input style={{ border: \"none\", textAlign: \"center\" }} />\n                </td>\n              </tr>\n              <tr>\n                <td>2</td>\n                <td>B</td>\n                <td>123</td>\n              </tr>\n              <tr>\n                <td>3</td>\n                <td>C</td>\n                <td>\n                  <input type=\"checkbox\" />\n                </td>\n              </tr>\n              <tr>\n                <td>4</td>\n                <td>D</td>\n                <td>D를 작업</td>\n              </tr>\n              <tr>\n                <td>5</td>\n                <td>E</td>\n                <td>456</td>\n              </tr>\n            </thead>\n          </table>\n          <div style={{ paddingTop: \"2em\" }}>\n            <button\n              style={{\n                backgroundColor: \"rgb(13, 132, 212)\",\n                color: \"white\",\n                border: \"none\",\n                padding: \"10px 100px\",\n                fontSize: \"15px\",\n                borderRadius: \"5px\",\n              }}\n              onClick={() => setShowModal(true)}\n            >\n              작업 저장\n            </button>\n          </div>\n          {showModal ? (\n            <>\n              <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\n                <div className=\"relative w-full my-6 mx-auto max-w-sm\">\n                  {/*content*/}\n                  <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                    {/*header*/}\n                    <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\n                      <h3 className=\"text-3xl font-semibold\">알림</h3>\n                      <button\n                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\n                        onClick={() => setShowModal(false)}\n                      >\n                        <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\n                          ×\n                        </span>\n                      </button>\n                    </div>\n                    {/*body*/}\n                    <div className=\"relative p-6 flex-auto\">\n                      <p className=\"my-4 text-blueGray-500 text-lg leading-relaxed\">\n                        작업을 저장하시겠습니까?\n                      </p>\n                    </div>\n                    {/*footer*/}\n                    <div className=\"flex items-center justify-between p-6 border-t border-solid border-blueGray-200 rounded-b\">\n                      <button\n                        className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                        type=\"button\"\n                        onClick={() => setShowModal(false)}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"bg-green-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                        type=\"button\"\n                        onClick={() => {\n                          setShowModal(false);\n                          history.push(\"/menu/list\");\n                          dispatch({\n                            type: \"SET_INFO\",\n                            value: true,\n                            name: \"isProcess\",\n                          });\n                        }}\n                      >\n                        OK\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n            </>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(WorkProcess);\n","/Users/oh/Desktop/Study/NC_proto_1/src/components/DailyDetail.js",["93","94"],"import React from \"react\";\nimport RoomContext from \"../context/RoomContext\";\n\nconst DailyDetail = () => {\n  const [Infos, dispatch] = React.useContext(RoomContext);\n\n  React.useEffect(() => {\n    dispatch({\n      type: \"SET_INFO\",\n      value: \"Channel test for Protection System\",\n      name: \"title\",\n    });\n  }, []);\n  return (\n    <div>\n      <div>\n        <div>\n          <table\n            style={{\n              margin: \"auto\",\n              width: \"100%\",\n              height: \"23rem\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>No</th>\n                <th>작업 종류</th>\n                <th>작업 내용</th>\n              </tr>\n              <tr>\n                <td>1</td>\n                <td>A</td>\n                <td>\n                  {/* <input style={{ border: \"none\", textAlign: \"center\" }} /> */}\n                  A를 작업\n                </td>\n              </tr>\n              <tr>\n                <td>2</td>\n                <td>B</td>\n                <td>123</td>\n              </tr>\n              <tr>\n                <td>3</td>\n                <td>C</td>\n                <td>\n                  <input type=\"checkbox\" />\n                </td>\n              </tr>\n              <tr>\n                <td>4</td>\n                <td>D</td>\n                <td>D를 작업</td>\n              </tr>\n              <tr>\n                <td>5</td>\n                <td>E</td>\n                <td>456</td>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DailyDetail;\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"103","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":19,"column":6,"nodeType":"106","endLine":19,"endColumn":8,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":26,"column":25,"nodeType":"110","messageId":"111","endLine":26,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":34,"column":15,"nodeType":"114","endLine":34,"endColumn":73},{"ruleId":"112","severity":1,"message":"115","line":60,"column":17,"nodeType":"114","endLine":65,"endColumn":18},{"ruleId":"112","severity":1,"message":"115","line":83,"column":17,"nodeType":"114","endLine":88,"endColumn":18},{"ruleId":"112","severity":1,"message":"115","line":106,"column":17,"nodeType":"114","endLine":111,"endColumn":18},{"ruleId":"112","severity":1,"message":"115","line":129,"column":17,"nodeType":"114","endLine":134,"endColumn":18},{"ruleId":"112","severity":1,"message":"115","line":152,"column":17,"nodeType":"114","endLine":157,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":181,"column":56,"nodeType":"114","endLine":181,"endColumn":71},{"ruleId":"99","severity":1,"message":"118","line":10,"column":10,"nodeType":"101","messageId":"102","endLine":10,"endColumn":16},{"ruleId":"104","severity":1,"message":"119","line":37,"column":6,"nodeType":"106","endLine":37,"endColumn":8,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"115","line":82,"column":17,"nodeType":"114","endLine":92,"endColumn":18},{"ruleId":"112","severity":1,"message":"115","line":96,"column":17,"nodeType":"114","endLine":106,"endColumn":18},{"ruleId":"112","severity":1,"message":"115","line":110,"column":17,"nodeType":"114","endLine":120,"endColumn":18},{"ruleId":"99","severity":1,"message":"121","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":15},{"ruleId":"104","severity":1,"message":"122","line":19,"column":6,"nodeType":"106","endLine":19,"endColumn":8,"suggestions":"123"},{"ruleId":"99","severity":1,"message":"121","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":15},{"ruleId":"104","severity":1,"message":"122","line":14,"column":6,"nodeType":"106","endLine":14,"endColumn":8,"suggestions":"124"},{"ruleId":"104","severity":1,"message":"122","line":15,"column":6,"nodeType":"106","endLine":15,"endColumn":8,"suggestions":"125"},{"ruleId":"104","severity":1,"message":"122","line":15,"column":6,"nodeType":"106","endLine":15,"endColumn":8,"suggestions":"126"},{"ruleId":"99","severity":1,"message":"121","line":7,"column":10,"nodeType":"101","messageId":"102","endLine":7,"endColumn":15},{"ruleId":"104","severity":1,"message":"122","line":15,"column":6,"nodeType":"106","endLine":15,"endColumn":8,"suggestions":"127"},{"ruleId":"99","severity":1,"message":"121","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":15},{"ruleId":"104","severity":1,"message":"122","line":13,"column":6,"nodeType":"106","endLine":13,"endColumn":8,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Infos'. Either include it or remove the dependency array.","ArrayExpression",["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-pascal-case","Imported JSX component Work_search must be in PascalCase or SCREAMING_SNAKE_CASE","'submit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["132"],"'Infos' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["133"],["134"],["135"],["136"],["137"],["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},{"desc":"141","fix":"144"},{"desc":"141","fix":"145"},{"desc":"141","fix":"146"},{"desc":"141","fix":"147"},{"desc":"141","fix":"148"},"Update the dependencies array to be: [Infos]",{"range":"149","text":"150"},"Update the dependencies array to be: [dispatch]",{"range":"151","text":"152"},{"range":"153","text":"152"},{"range":"154","text":"152"},{"range":"155","text":"152"},{"range":"156","text":"152"},{"range":"157","text":"152"},{"range":"158","text":"152"},[640,642],"[Infos]",[1165,1167],"[dispatch]",[606,608],[356,358],[413,415],[380,382],[415,417],[316,318]]